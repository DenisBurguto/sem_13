# –ó–∞–¥–∞–Ω–∏–µ No4
# üìå –í—Å–ø–æ–º–∏–Ω–∞–µ–º –∑–∞–¥–∞—á—É –∏–∑ —Å–µ–º–∏–Ω–∞—Ä–∞ 8 –ø—Ä–æ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö, –≥–¥–µ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –∏–º—è,
# –ª–∏—á–Ω—ã–∏ÃÜ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7) —Å–æ—Ö—Ä–∞–Ω—è—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ JSON —Ñ–∞–∏ÃÜ–ª.
# üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–∏ÃÜ —Ö—Ä–∞–Ω–∏—Ç —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Å–≤–æ–∏ÃÜ—Å—Ç–≤–∞—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –û—Ç–¥–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ JSON —Ñ–∞–∏ÃÜ–ª–∞ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–∏ÃÜ.
import json


DEFAULT_LEVEL = '7'


class MyUser:
    """class MyUser create person with name ,ID, authorisation level
    all parameters are strings to be used with json serial
    """

    def __init__(self, name: str, user_id: str, access_level: str = DEFAULT_LEVEL):
        self.name = name
        self.user_id = user_id
        self.access_level = access_level

    def __str__(self):
        return f'User, name: {self.name}, user_id: {self.user_id}, access level: {self.access_level}'

    def __repr__(self):
        return f'MyUser({str(self.name)},{self.user_id},{self.access_level})'

    def __eq__(self, other):
        return self.name == other.name and self.user_id == other.user_id


def create_users_list(file: str = 'user.json'):
    """use json file  filled in following way { access_level:{ user_id:name }} to create users as exemplars of
    MyUser class"""
    try:
        with open(file, 'r', encoding='utf=8') as f:
            data = json.load(f)
            my_users = []
            for item in data:
                for key, value in data[item].items():
                    user_ex = MyUser(value, key, item)
                    my_users.append(user_ex)
    except FileNotFoundError:
        print('Check your file name and try again.')
        my_users = []

    return my_users


if __name__ == '__main__':
    # get_name_id_level('user.json')
    # users = create_users_list()
    # for user in users:
    #     print(user)
    print(help(MyUser))
